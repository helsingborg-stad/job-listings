/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./source/js/job-listings.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/set-query-string/node_modules/query-string/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/set-query-string/node_modules/query-string/index.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar strictUriEncode = __webpack_require__(/*! strict-uri-encode */ \"./node_modules/set-query-string/node_modules/strict-uri-encode/index.js\");\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str) {\n\tif (typeof str !== 'string') {\n\t\treturn {};\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn {};\n\t}\n\n\treturn str.split('&').reduce(function (ret, param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\tkey = decodeURIComponent(key);\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tif (!ret.hasOwnProperty(key)) {\n\t\t\tret[key] = val;\n\t\t} else if (Array.isArray(ret[key])) {\n\t\t\tret[key].push(val);\n\t\t} else {\n\t\t\tret[key] = [ret[key], val];\n\t\t}\n\n\t\treturn ret;\n\t}, {});\n};\n\nexports.stringify = function (obj) {\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (Array.isArray(val)) {\n\t\t\treturn val.sort().map(function (val2) {\n\t\t\t\treturn strictUriEncode(key) + '=' + strictUriEncode(val2);\n\t\t\t}).join('&');\n\t\t}\n\n\t\treturn strictUriEncode(key) + '=' + strictUriEncode(val);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2V0LXF1ZXJ5LXN0cmluZy9ub2RlX21vZHVsZXMvcXVlcnktc3RyaW5nL2luZGV4LmpzP2YxZDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixzQkFBc0IsbUJBQU8sQ0FBQyxrR0FBbUI7O0FBRWpEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQSxFQUFFLElBQUk7QUFDTjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKOztBQUVBO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsRUFBRTtBQUNGIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3NldC1xdWVyeS1zdHJpbmcvbm9kZV9tb2R1bGVzL3F1ZXJ5LXN0cmluZy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBzdHJpY3RVcmlFbmNvZGUgPSByZXF1aXJlKCdzdHJpY3QtdXJpLWVuY29kZScpO1xuXG5leHBvcnRzLmV4dHJhY3QgPSBmdW5jdGlvbiAoc3RyKSB7XG5cdHJldHVybiBzdHIuc3BsaXQoJz8nKVsxXSB8fCAnJztcbn07XG5cbmV4cG9ydHMucGFyc2UgPSBmdW5jdGlvbiAoc3RyKSB7XG5cdGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuXHRcdHJldHVybiB7fTtcblx0fVxuXG5cdHN0ciA9IHN0ci50cmltKCkucmVwbGFjZSgvXihcXD98I3wmKS8sICcnKTtcblxuXHRpZiAoIXN0cikge1xuXHRcdHJldHVybiB7fTtcblx0fVxuXG5cdHJldHVybiBzdHIuc3BsaXQoJyYnKS5yZWR1Y2UoZnVuY3Rpb24gKHJldCwgcGFyYW0pIHtcblx0XHR2YXIgcGFydHMgPSBwYXJhbS5yZXBsYWNlKC9cXCsvZywgJyAnKS5zcGxpdCgnPScpO1xuXHRcdC8vIEZpcmVmb3ggKHByZSA0MCkgZGVjb2RlcyBgJTNEYCB0byBgPWBcblx0XHQvLyBodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL3F1ZXJ5LXN0cmluZy9wdWxsLzM3XG5cdFx0dmFyIGtleSA9IHBhcnRzLnNoaWZ0KCk7XG5cdFx0dmFyIHZhbCA9IHBhcnRzLmxlbmd0aCA+IDAgPyBwYXJ0cy5qb2luKCc9JykgOiB1bmRlZmluZWQ7XG5cblx0XHRrZXkgPSBkZWNvZGVVUklDb21wb25lbnQoa2V5KTtcblxuXHRcdC8vIG1pc3NpbmcgYD1gIHNob3VsZCBiZSBgbnVsbGA6XG5cdFx0Ly8gaHR0cDovL3czLm9yZy9UUi8yMDEyL1dELXVybC0yMDEyMDUyNC8jY29sbGVjdC11cmwtcGFyYW1ldGVyc1xuXHRcdHZhbCA9IHZhbCA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGRlY29kZVVSSUNvbXBvbmVudCh2YWwpO1xuXG5cdFx0aWYgKCFyZXQuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuXHRcdFx0cmV0W2tleV0gPSB2YWw7XG5cdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHJldFtrZXldKSkge1xuXHRcdFx0cmV0W2tleV0ucHVzaCh2YWwpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXRba2V5XSA9IFtyZXRba2V5XSwgdmFsXTtcblx0XHR9XG5cblx0XHRyZXR1cm4gcmV0O1xuXHR9LCB7fSk7XG59O1xuXG5leHBvcnRzLnN0cmluZ2lmeSA9IGZ1bmN0aW9uIChvYmopIHtcblx0cmV0dXJuIG9iaiA/IE9iamVjdC5rZXlzKG9iaikuc29ydCgpLm1hcChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0dmFyIHZhbCA9IG9ialtrZXldO1xuXG5cdFx0aWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xuXHRcdFx0cmV0dXJuIHZhbC5zb3J0KCkubWFwKGZ1bmN0aW9uICh2YWwyKSB7XG5cdFx0XHRcdHJldHVybiBzdHJpY3RVcmlFbmNvZGUoa2V5KSArICc9JyArIHN0cmljdFVyaUVuY29kZSh2YWwyKTtcblx0XHRcdH0pLmpvaW4oJyYnKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gc3RyaWN0VXJpRW5jb2RlKGtleSkgKyAnPScgKyBzdHJpY3RVcmlFbmNvZGUodmFsKTtcblx0fSkuZmlsdGVyKGZ1bmN0aW9uICh4KSB7XG5cdFx0cmV0dXJuIHgubGVuZ3RoID4gMDtcblx0fSkuam9pbignJicpIDogJyc7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/set-query-string/node_modules/query-string/index.js\n");

/***/ }),

/***/ "./node_modules/set-query-string/node_modules/strict-uri-encode/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/set-query-string/node_modules/strict-uri-encode/index.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2V0LXF1ZXJ5LXN0cmluZy9ub2RlX21vZHVsZXMvc3RyaWN0LXVyaS1lbmNvZGUvaW5kZXguanM/YWM5MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zZXQtcXVlcnktc3RyaW5nL25vZGVfbW9kdWxlcy9zdHJpY3QtdXJpLWVuY29kZS9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHN0cikge1xuXHRyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHN0cikucmVwbGFjZSgvWyEnKCkqXS9nLCBmdW5jdGlvbiAoYykge1xuXHRcdHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCk7XG5cdH0pO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/set-query-string/node_modules/strict-uri-encode/index.js\n");

/***/ }),

/***/ "./node_modules/set-query-string/set-query-string.js":
/*!***********************************************************!*\
  !*** ./node_modules/set-query-string/set-query-string.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var qs = __webpack_require__(/*! query-string */ \"./node_modules/set-query-string/node_modules/query-string/index.js\")\nvar replaceState\nvar pushState\n\nif (typeof window !== 'undefined') {\n  replaceState = window && window.history && window.history.replaceState\n  pushState = window && window.history && window.history.pushState\n}\n\nif (!replaceState) {\n  module.exports = function () {}\n} else {\n  module.exports = function (newQuery, options) {\n    options || (options = {})\n    var isEmpty = !newQuery\n    var isString = !isEmpty && typeof newQuery === 'string'\n    // whether to clear existing, any time a string is\n    // already given we'll just set that as new query\n    var clear = options.clear || isString\n    // history function to use\n    var historyFunc = options.pushState ? pushState : replaceState\n    // the new query object, (we start with existing if not `clear:true`)\n    var queryObj = clear ? {} : qs.parse(window.location.search)\n    var newString\n\n    if (!isEmpty && !isString) {\n      for (var key in newQuery) {\n        var value = newQuery[key]\n        // delete new falsy values, except number 0\n        if (!value && value !== 0) {\n          delete queryObj[key]\n        } else {\n          queryObj[key] = newQuery[key]\n        }\n      }\n      newString = qs.stringify(queryObj)\n    } else {\n      newString = newQuery || ''\n    }\n\n    // only add the `?` if we've got something\n    if (newString.length && newString.charAt(0) !== '?') {\n      newString = '?' + newString\n    }\n\n    historyFunc.call(window.history, options.state || window.history.state, '', window.location.pathname + (newString || ''))\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2V0LXF1ZXJ5LXN0cmluZy9zZXQtcXVlcnktc3RyaW5nLmpzPzBkOWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyxtQkFBTyxDQUFDLHdGQUFjO0FBQy9CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zZXQtcXVlcnktc3RyaW5nL3NldC1xdWVyeS1zdHJpbmcuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcXMgPSByZXF1aXJlKCdxdWVyeS1zdHJpbmcnKVxudmFyIHJlcGxhY2VTdGF0ZVxudmFyIHB1c2hTdGF0ZVxuXG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcmVwbGFjZVN0YXRlID0gd2luZG93ICYmIHdpbmRvdy5oaXN0b3J5ICYmIHdpbmRvdy5oaXN0b3J5LnJlcGxhY2VTdGF0ZVxuICBwdXNoU3RhdGUgPSB3aW5kb3cgJiYgd2luZG93Lmhpc3RvcnkgJiYgd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlXG59XG5cbmlmICghcmVwbGFjZVN0YXRlKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge31cbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG5ld1F1ZXJ5LCBvcHRpb25zKSB7XG4gICAgb3B0aW9ucyB8fCAob3B0aW9ucyA9IHt9KVxuICAgIHZhciBpc0VtcHR5ID0gIW5ld1F1ZXJ5XG4gICAgdmFyIGlzU3RyaW5nID0gIWlzRW1wdHkgJiYgdHlwZW9mIG5ld1F1ZXJ5ID09PSAnc3RyaW5nJ1xuICAgIC8vIHdoZXRoZXIgdG8gY2xlYXIgZXhpc3RpbmcsIGFueSB0aW1lIGEgc3RyaW5nIGlzXG4gICAgLy8gYWxyZWFkeSBnaXZlbiB3ZSdsbCBqdXN0IHNldCB0aGF0IGFzIG5ldyBxdWVyeVxuICAgIHZhciBjbGVhciA9IG9wdGlvbnMuY2xlYXIgfHwgaXNTdHJpbmdcbiAgICAvLyBoaXN0b3J5IGZ1bmN0aW9uIHRvIHVzZVxuICAgIHZhciBoaXN0b3J5RnVuYyA9IG9wdGlvbnMucHVzaFN0YXRlID8gcHVzaFN0YXRlIDogcmVwbGFjZVN0YXRlXG4gICAgLy8gdGhlIG5ldyBxdWVyeSBvYmplY3QsICh3ZSBzdGFydCB3aXRoIGV4aXN0aW5nIGlmIG5vdCBgY2xlYXI6dHJ1ZWApXG4gICAgdmFyIHF1ZXJ5T2JqID0gY2xlYXIgPyB7fSA6IHFzLnBhcnNlKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpXG4gICAgdmFyIG5ld1N0cmluZ1xuXG4gICAgaWYgKCFpc0VtcHR5ICYmICFpc1N0cmluZykge1xuICAgICAgZm9yICh2YXIga2V5IGluIG5ld1F1ZXJ5KSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IG5ld1F1ZXJ5W2tleV1cbiAgICAgICAgLy8gZGVsZXRlIG5ldyBmYWxzeSB2YWx1ZXMsIGV4Y2VwdCBudW1iZXIgMFxuICAgICAgICBpZiAoIXZhbHVlICYmIHZhbHVlICE9PSAwKSB7XG4gICAgICAgICAgZGVsZXRlIHF1ZXJ5T2JqW2tleV1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBxdWVyeU9ialtrZXldID0gbmV3UXVlcnlba2V5XVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBuZXdTdHJpbmcgPSBxcy5zdHJpbmdpZnkocXVlcnlPYmopXG4gICAgfSBlbHNlIHtcbiAgICAgIG5ld1N0cmluZyA9IG5ld1F1ZXJ5IHx8ICcnXG4gICAgfVxuXG4gICAgLy8gb25seSBhZGQgdGhlIGA/YCBpZiB3ZSd2ZSBnb3Qgc29tZXRoaW5nXG4gICAgaWYgKG5ld1N0cmluZy5sZW5ndGggJiYgbmV3U3RyaW5nLmNoYXJBdCgwKSAhPT0gJz8nKSB7XG4gICAgICBuZXdTdHJpbmcgPSAnPycgKyBuZXdTdHJpbmdcbiAgICB9XG5cbiAgICBoaXN0b3J5RnVuYy5jYWxsKHdpbmRvdy5oaXN0b3J5LCBvcHRpb25zLnN0YXRlIHx8IHdpbmRvdy5oaXN0b3J5LnN0YXRlLCAnJywgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICsgKG5ld1N0cmluZyB8fCAnJykpXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/set-query-string/set-query-string.js\n");

/***/ }),

/***/ "./source/js/job-listings.js":
/*!***********************************!*\
  !*** ./source/js/job-listings.js ***!
  \***********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var set_query_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! set-query-string */ \"./node_modules/set-query-string/set-query-string.js\");\n/* harmony import */ var set_query_string__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(set_query_string__WEBPACK_IMPORTED_MODULE_0__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar JobListings = function JobListings() {\n  var _this = this;\n\n  _classCallCheck(this, JobListings);\n\n  _defineProperty(this, \"handleEvents\", function () {\n    var _jobListings = jobListings,\n        jobId = _jobListings.jobId;\n    var applyButtons = document.getElementsByClassName('job-listings-application');\n    var loginButton = document.querySelector('[js-trigger-btn-id]');\n\n    for (var i = 0; i < applyButtons.length; i++) {\n      var button = applyButtons.item(i);\n      button.addEventListener('click', function (e) {\n        set_query_string__WEBPACK_IMPORTED_MODULE_0___default()({\n          rmpage: 'apply',\n          rmjob: jobId\n        }, {\n          pushState: true,\n          clear: true\n        });\n\n        _this.renderApplicationIframe();\n      });\n    }\n\n    loginButton.addEventListener('click', function (e) {\n      set_query_string__WEBPACK_IMPORTED_MODULE_0___default()({\n        rmpage: 'auth'\n      }, {\n        pushState: true,\n        clear: true\n      });\n\n      _this.renderApplicationIframe();\n    });\n  });\n\n  _defineProperty(this, \"renderApplicationIframe\", function () {\n    // from db\n    var iFrameUrl = 'https://web103.reachmee.com/ext/';\n    var validator = '9ec24d855e37a090a5e232077f53c593';\n    var iid = 'I017';\n    var customer = '1118';\n    var site = '9';\n    var iHelperUrl = 'https://helsingborg.se/arbete/lediga-jobb-i-helsingborgs-stad/';\n    var height = '4000';\n    var langDef = 'SE';\n    var title = 'ReachMee Rekrytera extern webbplats';\n    var ref = encodeURIComponent(document.referrer); // form url\n\n    var jobId = '';\n    var destPage = '';\n    var langId = '';\n    var rmproj = '';\n    var rmihelper; //\n\n    function getQueryVariable(variable) {\n      if (variable.toLowerCase() == 'rmurl') {\n        var query = decodeURIComponent(window.location.search.substring(1));\n      } else {\n        var query = window.location.search.substring(1);\n      }\n\n      var vars = query.split('&');\n\n      for (var i = 0; i < vars.length; i++) {\n        var pair = vars[i].split('=');\n\n        if (pair[0] == variable) {\n          if (pair.length > 2) return pair[2];\n          return pair[1];\n        }\n      }\n    }\n\n    iFrameUrl += iid + '/' + customer + '/';\n    destPage = getQueryVariable('rmpage');\n    jobId = getQueryVariable('rmjob');\n    langId = getQueryVariable('rmlang');\n    rmproj = getQueryVariable('rmproj');\n    rmihelper = getQueryVariable('rmihelper');\n\n    if (typeof destPage === 'undefined' || destPage == '') {\n      destPage = 'main?';\n    } else {\n      destPage += '?';\n    }\n\n    if (destPage == 'job?' || destPage == 'apply?' || destPage == 'application?') {\n      if (typeof jobId === 'undefined' || jobId == '') {\n        destPage = 'main?';\n      } else {\n        destPage += 'job_id=' + jobId + '&';\n      }\n    }\n\n    if (destPage == 'assessment?') {\n      if (typeof rmproj === 'undefined' || rmproj == '') {\n        destPage = 'main?';\n      } else {\n        destPage += 'commseqno=' + rmproj + '&';\n      }\n    }\n\n    if (destPage == 'booking?') {\n      if (typeof rmproj === 'undefined' || rmproj == '' || jobId == 'undefined' || jobId == '') {\n        destPage = 'main?';\n      } else {\n        destPage += 'commseqno=' + rmproj + '&job_id=' + jobId + '&';\n      }\n    } // oldstyleurl\n\n\n    var rmurl = '';\n    rmurl = getQueryVariable('RMURL');\n\n    if (typeof rmurl !== 'undefined' && rmurl.length > 0) {\n      destPage = 'job?job_id=' + rmurl + '&';\n    }\n\n    rmurl = getQueryVariable('rmurl');\n\n    if (typeof rmurl !== 'undefined' && rmurl.length > 0) {\n      destPage = 'job?job_id=' + rmurl + '&';\n    }\n\n    var rmtoken = getQueryVariable('rmtoken');\n\n    if (destPage == 'subscription?' || destPage == 'subscriptions?') {\n      if (typeof rmtoken === 'undefined' || rmtoken == '') {\n        destPage = 'main?';\n      } else {\n        destPage += 'skey=' + rmtoken + '&';\n      }\n    }\n\n    if (destPage == 'profileactivate?') {\n      var skey = getQueryVariable('skey');\n\n      if (typeof skey === 'undefined' || skey == '') {\n        destPage = 'main?';\n      } else {\n        destPage += 'skey=' + skey + '&';\n      }\n    }\n\n    iFrameUrl += destPage;\n    iFrameUrl += 'site=' + site + '&validator=' + validator;\n\n    if (typeof langId === 'undefined' || langId == '') {\n      langId = langDef;\n    }\n\n    var cantoken = getQueryVariable('cantoken');\n\n    if (cantoken) {\n      iFrameUrl += '&cantoken=' + cantoken;\n    }\n\n    iFrameUrl += '&lang=' + langId;\n    var cookie_name = 'rm_reftracker_1118';\n    var cookie_parts = ('; ' + document.cookie).split('; ' + cookie_name + '=');\n\n    if (cookie_parts.length == 2) {\n      var cookie_value = cookie_parts.pop().split(';').shift();\n\n      if (cookie_value !== '') {\n        ref = cookie_value.replace(/^\"(.*)\"$/, '$1');\n      }\n    } // If referer header is empty, check for QueryString ref\n\n\n    if (ref == null || ref == undefined || ref == '') {\n      ref = getQueryVariable('ref');\n    }\n\n    if (ref == undefined || ref.length == 0) {\n      ref = '';\n    }\n\n    if (ref.length > 0) {\n      ref = ref.toLowerCase();\n      ref = ref.indexOf('t.co') > -1 ? 'Twitter' : ref;\n    }\n\n    iFrameUrl += '&ref=' + ref; // referrer\n    // add iHelperURL\n\n    if (iHelperUrl != '' && iHelperUrl != undefined) {\n      iFrameUrl += '&ihelper=' + iHelperUrl;\n    } // Resize iframe to full height\n\n\n    function resizeIframe(height) {\n      // +60 is a general rule of thumb to allow for differences in\n      // IE & and FF height reporting, can be adjusted as required..\n      document.getElementById('riframe').height = parseInt(height) + 60;\n    }\n\n    function scrollToIframe(iframeElement) {\n      if (iframeElement.dataset.loadedFirstTime) {\n        iframeElement.scrollIntoView(true);\n      }\n\n      iframeElement.dataset.loadedFirstTime = true;\n    }\n\n    if (!rmihelper) {\n      var iframe = document.createElement('iframe');\n      iframe.setAttribute('allowTransparency', 'true');\n      iframe.setAttribute('title', 'title');\n      iframe.setAttribute('id', 'riframe');\n      iframe.setAttribute('name', 'riframe'); // iframe.setAttribute('onload', 'scrollToIframe(this)');\n\n      iframe.setAttribute('width', '100%');\n      iframe.setAttribute('height', height);\n      iframe.setAttribute('frameborder', '0');\n      iframe.setAttribute('src', iFrameUrl);\n      console.log(iFrameUrl);\n      var wrap = document.createElement('div');\n      wrap.appendChild(iframe); // document.write(wrap.innerHTML); // <- Old code\n\n      var modalBody = document.getElementById('job-listings-modal').getElementsByClassName('c-modal__content')[0];\n      modalBody.innerHTML = '';\n      modalBody.appendChild(wrap); // Listen for messages sent from the iFrame\n\n      var eventMethod = window.addEventListener ? 'addEventListener' : 'attachEvent';\n      var eventer = window[eventMethod];\n      var messageEvent = eventMethod == 'attachEvent' ? 'onmessage' : 'message';\n      eventer(messageEvent, function (e) {\n        if (e.data.indexOf && {}.toString.call(e.data.indexOf) === '[object Function]') if (e.data.indexOf('resize::') != -1) {\n          var _height = e.data.replace('resize::', '');\n\n          document.getElementById('riframe').style.height = parseInt(_height) + 'px';\n        }\n      }, false);\n    }\n  });\n\n  this.handleEvents();\n  this.renderApplicationIframe();\n};\n\nnew JobListings();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/js/job-listings.js\n");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtRQUFBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTs7UUFFQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBOzs7UUFHQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0EsMENBQTBDLGdDQUFnQztRQUMxRTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBLHdEQUF3RCxrQkFBa0I7UUFDMUU7UUFDQSxpREFBaUQsY0FBYztRQUMvRDs7UUFFQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0EseUNBQXlDLGlDQUFpQztRQUMxRSxnSEFBZ0gsbUJBQW1CLEVBQUU7UUFDckk7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQSwyQkFBMkIsMEJBQTBCLEVBQUU7UUFDdkQsaUNBQWlDLGVBQWU7UUFDaEQ7UUFDQTtRQUNBOztRQUVBO1FBQ0Esc0RBQXNELCtEQUErRDs7UUFFckg7UUFDQTs7O1FBR0E7UUFDQSIsImZpbGUiOiJqcy9qb2ItbGlzdGluZ3MuMmFlNjFlZDQwNTgyM2RmZmFkNjYubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IFwiLi9zb3VyY2UvanMvam9iLWxpc3RpbmdzLmpzXCIpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==